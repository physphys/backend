openapi: 3.0.0
info:
  title: openapi.yml
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
  - url: 'http://localhost:3100'
    description: mock
paths:
  '/users/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - User
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-users-id
      description: ''
      security:
        - X-Auth-Token: []
    put:
      summary: ''
      operationId: put-users-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                icon:
                  type: string
      tags:
        - User
      security:
        - X-Auth-Token: []
    delete:
      summary: ''
      operationId: delete-users-id
      responses:
        '204':
          description: No Content
      tags:
        - User
      security:
        - X-Auth-Token: []
  /pins:
    parameters: []
    get:
      summary: ''
      operationId: get-pins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pin'
      parameters: []
      tags:
        - Pin
      security:
        - X-Auth-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pagingKey:
                  type: string
                  example: dynamo用のページングキー
    post:
      summary: Get home pins with POST Method
      operationId: post-pins
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  pins:
                    type: array
                    items:
                      $ref: '#/components/schemas/Pin'
                  pagingKey:
                    type: string
                required:
                  - pins
      parameters: []
      tags:
        - Pin
      security:
        - X-Auth-Token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                pagingKey:
                  type: string
                  example: dynamo用のページングキー
      description: 本当はGETにしたいけど、bodyを使いたいのでPOSTになってる。ホームのピン一覧を取得するAPI
  '/pins/{id}':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'
      operationId: get-pins-id
      security:
        - X-Auth-Token: []
    delete:
      summary: ''
      operationId: delete-pins-id
      responses:
        '204':
          description: No Content
      tags:
        - Pin
      security:
        - X-Auth-Token: []
    put:
      summary: ''
      operationId: put-pins-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'
      tags:
        - Pin
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                isPrivate:
                  type: boolean
      security:
        - X-Auth-Token: []
  /boards:
    post:
      summary: ''
      operationId: post-boards
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
      tags:
        - Board
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                isPrivate:
                  type: boolean
              required:
                - name
      security:
        - X-Auth-Token: []
  '/users/{id}/boards':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Board
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Board'
      operationId: get-users-id-boards
      security:
        - X-Auth-Token: []
  '/users/{id}/pins':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pin'
      operationId: get-users-id-pins
      security:
        - X-Auth-Token: []
  '/boards/{id}/pins':
    parameters:
      - schema:
          type: integer
        name: id
        in: path
        required: true
      - schema:
          type: integer
        name: page
        in: query
        required: true
    get:
      summary: Your GET endpoint
      tags:
        - Pin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pin'
      operationId: 'get-boards-:id-pins'
      parameters:
        - schema:
            type: integer
          in: query
          name: page
          required: true
      security:
        - X-Auth-Token: []
    post:
      summary: ''
      operationId: post-boards-id-pins
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pin'
      tags:
        - Pin
      security:
        - X-Auth-Token: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                url:
                  type: string
                isPrivate:
                  type: string
                tags:
                  type: string
                  description: tags separeted by single space
                image:
                  type: string
                  format: binary
              required:
                - title
                - image
      parameters: []
  '/boards/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    delete:
      summary: ''
      operationId: delete-boards-id
      responses:
        '204':
          description: No Content
      tags:
        - Board
      security:
        - X-Auth-Token: []
    put:
      summary: ''
      operationId: put-boards-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Board'
      tags:
        - Board
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                isPrivate:
                  type: boolean
                isArchive:
                  type: boolean
      security:
        - X-Auth-Token: []
  '/boards/{boardID}/pins/{pinID}':
    parameters:
      - schema:
          type: string
        name: boardID
        in: path
        required: true
      - schema:
          type: string
        name: pinID
        in: path
        required: true
    post:
      summary: ''
      operationId: post-boards-boardID-pins-pinID
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties: {}
      parameters: []
      security:
        - X-Auth-Token: []
    delete:
      summary: ''
      operationId: delete-boards-boardID-pins-pinID
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties: {}
      security:
        - X-Auth-Token: []
  /users/sign-up:
    post:
      summary: ''
      operationId: post-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user_id:
                    type: integer
                required:
                  - token
                  - user_id
        '':
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  description: 大文字1、小文字1、数字1、10文字以上
              required:
                - name
                - email
                - password
      tags:
        - User
    parameters: []
  /users/sign-in:
    post:
      summary: ''
      operationId: post-users-sign-in
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user_id:
                    type: integer
                required:
                  - token
                  - user_id
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      tags:
        - User
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          format: email
        icon:
          type: string
          format: uri
      required:
        - id
        - name
    Board:
      title: Board
      type: object
      properties:
        id:
          type: integer
        userId:
          type: integer
        name:
          type: string
        description:
          type: string
        isPrivate:
          type: boolean
        isArchive:
          type: boolean
      required:
        - id
        - userId
        - name
        - isPrivate
        - isArchive
    Pin:
      title: Pin
      type: object
      description: ''
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        url:
          type: string
          format: uri
        imageUrl:
          type: string
          format: uri
        isPrivate:
          type: boolean
        userId:
          type: integer
      required:
        - id
        - title
        - imageUrl
        - isPrivate
        - userId
  securitySchemes:
    X-Auth-Token:
      name: X-Auth-Token
      type: apiKey
      in: header
