name: go_integration_test
on:
  pull_request:
    types: [opened, synchronize]
  push:
    branches:
      - master
      - develop

jobs:
  test:
    env:
      GOPATH: ${{ github.workspace }}
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.2
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
      - name: run docker-compose
        run: |
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          export AWS_S3_ACCESS_KEY_ID=${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          export AWS_S3_SECRET_ACCESS_KEY=${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          docker-compose build
          docker-compose up -d
        working-directory: ./src/github.com/${{ github.repository }}
      - name: sleep
        run: |
          sleep 10
        working-directory: ./src/github.com/${{ github.repository }}
      - name: Test
        run: make integration_tests
        working-directory: ./src/github.com/${{ github.repository }}/app

  deploy:
    env:
      GOPATH: ${{ github.workspace }}
    runs-on: ubuntu-latest
    needs: [test]
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.2
        if: contains(github.ref, 'master')
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          path: ./src/github.com/${{ github.repository }}
        if: contains(github.ref, 'master')
      - name: aws configure
        uses: aws-actions/configure-aws-credentials@v1
        if: contains(github.ref, 'master')
        with:
          aws-access-key-id: ${{ secrets.AWS_ECS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ECS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: login to amazon ECR
        id: login-ect
        uses: aws-actions/amazon-ecr-login@v1
        if: contains(github.ref, 'master')
      - name: build image
        run: |
          export DOCKER_BUILDKIT=1
          docker build -t ${{ secrets.AWS_ECS_SERVICE }}-stg .
          docker tag ${{ secrets.AWS_ECS_SERVICE }}-stg:latest ${{ secrets.AWS_ECR_URI }}/${{ secrets.AWS_ECS_SERVICE }}-stg:latest
          docker push ${{ secrets.AWS_ECR_URI }}/${{ secrets.AWS_ECS_SERVICE }}-stg:latest
        working-directory: ./src/github.com/${{ github.repository }}/app
        if: contains(github.ref, 'master')
      - name: deploy
        run: |
          ./scripts/ecs-deploy -c {{ secrets.AWS_ECS_SERVICE }}-cluster-stg -n {{ secrets.AWS_ECS_SERVICE }}-service-stg -i {{ secrets.AWS_ECR_URI }}/{{ secrets.AWS_ECS_SERVICE}}-stg:latest -r {{ secrets.AWS_DEFAULT_REGION }} -t 300
        working-directory: ./src/github.com/${{ github.repository }}/app
        if: contains(github.ref, 'master')


